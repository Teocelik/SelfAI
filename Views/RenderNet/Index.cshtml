@{
    ViewData["Title"] = "Görsel Yükleme";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container">
        <h2 class="text-center my-4">Görsel Yükle</h2>

        <div class="row justify-content-center">
            <div class="col-md-8">
                <form asp-controller="RenderNet" asp-action="UploadImage" enctype="multipart/form-data" method="post" id="uploadForm">
                    <div class="mb-3">
                        <label for="formFile" class="form-label">Bir görsel seçin:</label>
                        <input class="form-control" type="file" name="formFile" id="formFile" accept="image/*" />
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Yükle</button>
                </form>
            </div>
        </div>

        <div id="imageContainer" class="mt-4" style="position: relative; width: 512px; height: 512px; margin: 0 auto; overflow: hidden; display: none; text-align: center;">
            <img id="uploadedImage" src="" alt="Yüklenen Fotoğraf" style="max-width: 100%; max-height: 100%; object-fit: contain; border-radius: 8px;" />
            <div id="frame" style="position: absolute; width: 256px; height: 256px; border: 3px dashed #007bff; background: rgba(0, 123, 255, 0.1); cursor: move; box-shadow: 0 4px 8px rgba(0,0,0,0.2);"></div>
        </div>

        <div class="text-center mt-3 mb-3">
            <button id="confirmButton" class="btn btn-success" style="display: none;">Tamam</button>
        </div>

        <div id="loading" style="display: none; text-align: center; margin-top: 20px;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Yükleniyor...</span>
            </div>
        </div>
    </div>

    <style>
        #imageContainer {
            position: relative;
            width: 256px;
            height: 256px;
            margin: 0 auto;
            overflow: hidden;
            display: none;
            text-align: center;
        }

        #uploadedImage {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            border-radius: 8px;
        }

        #frame {
            position: absolute;
            width: 256px;
            height: 256px;
            border: 3px dashed #007bff;
            background: rgba(0, 123, 255, 0.1);
            cursor: move;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }

        #frame:hover {
            border-color: #0056b3;
            background: rgba(0, 86, 179, 0.2);
        }

        .mb-3 {
            margin-bottom: 3rem !important; /* 3 cm boşluk için */
        }
    </style>

    <script>
        // Dosya seçildiğinde önizleme göster
        document.getElementById('formFile').addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file && file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const imageContainer = document.getElementById('imageContainer');
                    const uploadedImage = document.getElementById('uploadedImage');
                    const frame = document.getElementById('frame');
                    const confirmButton = document.getElementById('confirmButton');

                    uploadedImage.src = e.target.result;
                    imageContainer.style.display = 'block';
                    frame.style.display = 'block';
                    confirmButton.style.display = 'block';
                    frame.style.left = '0px';
                    frame.style.top = '0px';
                };
                reader.readAsDataURL(file);
            }
        });

        // Form gönderildiğinde yükleme işlemi
        document.getElementById('uploadForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(this);
            const loading = document.getElementById('loading');
            loading.style.display = 'block';

            fetch(this.action, {
                method: 'POST',
                body: formData
            }).then(response => response.json()).then(data => {
                loading.style.display = 'none';
                alert('Görsel başarıyla yüklendi!');
            }).catch(error => {
                loading.style.display = 'none';
                alert('Yükleme sırasında bir hata oluştu.');
            });
        });

        // Çerçeveyi sürükleme işlevi
        let isDragging = false;
        let startX, startY;
        const frame = document.getElementById('frame');

        frame.addEventListener('mousedown', function(e) {
            isDragging = true;
            startX = e.clientX - frame.offsetLeft;
            startY = e.clientY - frame.offsetTop;
        });

        document.addEventListener('mousemove', function(e) {
            if (isDragging) {
                let newLeft = e.clientX - startX;
                let newTop = e.clientY - startY;

                const imageRect = document.getElementById('imageContainer').getBoundingClientRect();
                const frameRect = frame.getBoundingClientRect();

                if (newLeft < 0) newLeft = 0;
                if (newTop < 0) newTop = 0;
                if (newLeft + frameRect.width > imageRect.width) newLeft = imageRect.width - frameRect.width;
                if (newTop + frameRect.height > imageRect.height) newTop = imageRect.height - frameRect.height;

                frame.style.left = newLeft + 'px';
                frame.style.top = newTop + 'px';
            }
        });

        document.addEventListener('mouseup', function() {
            isDragging = false;
        });

        // Tamam butonuna tıklama ve görseli kırpma
        document.getElementById('confirmButton').addEventListener('click', function() {
            const frame = document.getElementById('frame');
            const uploadedImage = document.getElementById('uploadedImage');
            const confirmButton = document.getElementById('confirmButton');

            // Çerçeve koordinatlarını al
            const left = parseFloat(frame.style.left);
            const top = parseFloat(frame.style.top);
            const frameWidth = frame.offsetWidth;
            const frameHeight = frame.offsetHeight;

            // Canvas oluştur
            const canvas = document.createElement('canvas');
            canvas.width = frameWidth;
            canvas.height = frameHeight;
            const ctx = canvas.getContext('2d');

            // Görselin doğal boyutlarını al
            const img = new Image();
            img.src = uploadedImage.src;
            img.onload = function() {
                // Görselin container içindeki ölçeklenmiş boyutlarını al
                const containerRect = document.getElementById('imageContainer').getBoundingClientRect();
                const imgRect = uploadedImage.getBoundingClientRect();

                // Ölçekleme oranını hesapla
                const scaleX = img.naturalWidth / imgRect.width;
                const scaleY = img.naturalHeight / imgRect.height;

                // Çerçevenin doğal görseldeki koordinatlarını hesapla
                const srcX = left * scaleX;
                const srcY = top * scaleY;
                const srcWidth = frameWidth * scaleX;
                const srcHeight = frameHeight * scaleY;

                // Canvas üzerine kırpılmış alanı çiz
                ctx.drawImage(img, srcX, srcY, srcWidth, srcHeight, 0, 0, frameWidth, frameHeight);

                // Orijinal Görseli kırpılmış görselle değiştir
                uploadedImage.src = canvas.toDataURL('image/png');
                frame.style.display = 'none'; // Çerçeveyi gizle
                confirmButton.style.display = 'none'; // Tamam butonunu gizle

                // Koordinatları bildir
                alert(`Seçilen alan: left=${left}px, top=${top}px, width=${frameWidth}px, height=${frameHeight}px`);
            };
        });
    </script>
</body>
</html>